# This is a rough example of using Okta as the authorization server as part of a SMART/FHIR deployment.
# It includes the following features:
# - standalone launch with launch parameters
# - a patient picker screen and OAuth2 scope selection and consent.
# - applicable proxies for properly handling public client authentication as well as returning launch parameters in a flexible way.
# - passthrough API endpoints for demo data, hosted by HAPI.org.

service: okta-smartfhir-auth-demo
plugins:
  - serverless-s3-sync
  - serverless-apigateway-service-proxy
  
provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  
  logs:
    restApi: true
    
  environment:
#This variable will contain the live API URL (https://XXXXX.execute-api.us-east-1.amazonaws.com/dev)
    GATEWAY_URL:
      !Join
        - ''
        - - 'https://'
          - !Ref ApiGatewayRestApi
          - '.execute-api.'
          - ${opt:region, self:provider.region}
          - '.amazonaws.com/'
          - ${opt:stage, self:provider.stage}
          
    AUTHZ_ISSUER: https://_YOUR_ORG_.oktapreview.com/oauth2/_YOUR_AUTHZ_SERVER_
    AUTHZ_SERVER: _YOUR_AUTHZ_SERVER_
    OKTA_ORG: _YOUR_ORG_.oktapreview.com
    STATE_COOKIE_SIGNATURE_KEY: JustPutAReallyLongValueHere!
    
    #TODO: Get rid of.
    API_KEY: _AN_API_KEY_
    
    PICKER_DISPLAY_NAME: Patient Picker
    PICKER_CLIENT_ID: _CLIENT_ID_FOR_PATIENT_PICKER_
    PICKER_CLIENT_SECRET: _CLIENT_SECRET_FOR_PATIENT_PICKER_
    
#Lambda function for our token proxy.
functions:
  smart-authorize-proxy:
    handler: authorize.smartAuthorizeProxy
    events:
      - http:
          path: /authorize
          method: GET

  smart-token-proxy:
    handler: token.smartTokenProxy
    events:
      - http:
          path: /token
          method: POST
          
  patient_picker:
    handler: patient_picker.patientPickerApp
    events:
      - http:
          path: /oidc_callback
          method: GET
      - http:
          path: /patient_authorization
          method: GET
      - http:
          path: /patient_authorization
          method: POST
      - http:
          path: /static/{proxy+}
          method: GET
  
  token_hook:
    handler: token_hook.tokenHook
    events:
      - http:
          path: /tokenhook
          method: POST
 
  
  mock_patient_service:
    handler: mock_patient_service.mockPatientService
    events:
      - http:
          path: /patientMockService
          method: GET

  keys_endpoint:
    handler: keys.keysEndpoint
    events:
      - http:
          path: /keys
          method: GET
          
#############          
#HAPI Proxies
#############
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
          integration: http-proxy
          request:
            uri: http://hapi.fhir.org/baseR4/{proxy}
            parameters:
              paths:
                proxy: true      
#################
#END HAPI Proxies                
#################

#TODO - make the s3 stuff dynamic so it's easy to configure.                   
custom:
#Deploy the metadata static files to S3.
  s3Sync:
    - bucketName: okta-smartfhir-auth-demo-metadata
      localDir: metadata_files
      
#Deploy the API gateway endpoints to host the metadata files.
  apiGatewayServiceProxies:
    - s3:
        path: /metadata
        method: get
        action: GetObject
        bucket:
          Ref: MetadataBucket
        key: legacy_metadata.json
        cors: true

    - s3:
        path: /smart-configuration
        method: get
        action: GetObject
        bucket:
          Ref: MetadataBucket
        key: smart_configuration.json
        cors: true        
        
    - s3:
        path: /.well-known/smart-configuration
        method: get
        action: GetObject
        bucket:
          Ref: MetadataBucket
        key: smart_configuration.json
        cors: true       
        
# Define the S3 bucket that will hold the public metadata resources.
resources:
  Resources:
    MetadataBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: okta-smartfhir-auth-demo-metadata